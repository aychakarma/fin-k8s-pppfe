apiVersion: tekton.dev/v1beta1
kind: Pipeline
metadata:
  name: argocd-final
spec:
  description: "This pipeline clones a git repo, makes mvnw executable, runs JUnit tests, builds with Maven, then builds and pushes a Docker image."
  params:
    - name: repo-url
      type: string
      description: "The git repo URL to clone from."
    - name: branch
      type: string
      description: "The git branch to clone."
    - name: image
      type: string
      description: "The Docker image reference."
    - name: context
      type: string
      description: "The Docker build context path."
    - name: sonar_login
      description: "Identifiant de connexion SonarQube"
      type: string
    - name: sonar_password
      description: "Mot de passe de connexion SonarQube"
      type: string
    - name: nexus_login
      description: "Identifiant de connexion Nexus"
      type: string
    - name: nexus_password
      description: "Mot de passe de connexion Nexus"
      type: string
    - name: nexus_url
      description: "URL de Nexus"
      type: string
  workspaces:
    - name: k8s
  tasks:
    - name: fetch-sources
      taskRef:
        name: git-clones
      workspaces:
        - name: output
          workspace: k8s
      params:
        - name: url
          value: "$(params.repo-url)"
        - name: branch
          value: "$(params.branch)"     

    - name: maven-tasks
      taskRef:
        name: maven-tasks
      runAfter:
        - fetch-sources
      workspaces:
        - name: k8s

    - name: sonarqube-task
      taskRef:
        name: sonarqube-task
      runAfter:
        - maven-tasks
      workspaces:
        - name: k8s
      params:
        - name: sonar_login
          value: "$(params.sonar_login)"
        - name: sonar_password
          value: "$(params.sonar_password)"
          
    - name: nexus-task-fin
      taskRef:
        name: nexus-task-fin
      runAfter:
        - sonarqube-task
      workspaces:
        - name: k8s
      params:
        - name: nexus_login
          value: "$(params.nexus_login)"
        - name: nexus_password
          value: "$(params.nexus_password)"
        - name: nexus_url
          value: "$(params.nexus_url)"

    - name: docker-builds
      taskRef:
        name: docker-builds
      runAfter:
        - nexus-task-fin
      workspaces:
        - name: k8s
      params:
        - name: image
          value: "$(params.image)"
        - name: context
          value: "$(params.context)"
            
    - name: docker-pushs
      taskRef:
        name: docker-pushs
      runAfter:
        - docker-builds
      workspaces:
        - name: k8s
      params:
        - name: image
          value: "$(params.image)"
          
    - name: prepare
      taskRef:
        name: prepare
      runAfter:
        - docker-pushs
      workspaces:
        - name: k8s
